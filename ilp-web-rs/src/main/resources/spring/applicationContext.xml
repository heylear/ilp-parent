<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd
      http://www.springframework.org/schema/data/jpa
      http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-autowire="byName" default-lazy-init="true">

    <context:component-scan
            base-package="com.anji.allways.ilp.service, com.anji.allways.ilp.repo"/>

    <context:property-placeholder location="classpath:application.properties"/>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="${jdbc.jndi}"/>
    </bean>-->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.ds.driver}"></property>
        <property name="url" value="${jdbc.ds.url}"></property>
        <property name="username" value="${jdbc.ds.username}"></property>
        <property name="password" value="${jdbc.ds.password}"></property>
        <property name="initialSize" value="${jdbc.ds.initialSize}"/>
        <property name="maxActive" value="${jdbc.ds.maxActive}"/>
        <property name="minIdle" value="${jdbc.ds.minIdle}"/>
        <property name="maxIdle" value="${jdbc.ds.maxIdle}"/>
        <property name="maxWait" value="${jdbc.ds.maxWait}"/>
        <property name="removeAbandoned" value="${jdbc.ds.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.ds.removeAbandonedTimeout}"/>
        <property name="validationQuery" value="${jdbc.ds.validationQuery}"/>
    </bean>

    <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="${jpa.dialect}"/>
        <property name="showSql" value="${jpa.showsql}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaAdapter"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.query.cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.factory_class}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.statistics}</prop>
                <prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.anji.allways.ilp.common.entity</value>
            </list>
        </property>
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" propagation="REQUIRED"/>
            <tx:method name="find*" read-only="true" propagation="REQUIRED"/>
            <tx:method name="*" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.anji.allways.ilp.service.provider..*Service*.*(..)) "/>
    </aop:config>

    <jpa:repositories base-package="com.anji.allways.ilp.repo"
                      entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="transactionManager"
                      repository-impl-postfix="Impl"
                      factory-class="com.anji.allways.ilp.repo.provider.DefaultRepositoryFactoryBean">
    </jpa:repositories>

</beans>